{"ast":null,"code":"import _objectSpread from \"/Users/danialridhwan/Downloads/polaris-form-exercise-danial/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/Users/danialridhwan/Downloads/polaris-form-exercise-danial/src/components/UpdateUserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { Form, FormLayout, TextField, DatePicker, Select, Button, ButtonGroup, Card, Label } from '@shopify/polaris';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar UpdateUserForm = _ref => {\n  _s();\n\n  var {\n    userData\n  } = _ref;\n  var [formData, setFormData] = useState(userData); // Date props for birthday\n  // default to today if userData doesn't have birthday and DatePicker doesn't break\n\n  var initialBirthdayDate = userData !== null && userData !== void 0 && userData.birthday ? new Date(userData === null || userData === void 0 ? void 0 : userData.birthday) : new Date();\n  var initialBirthdayMonth = initialBirthdayDate.getMonth(),\n      initialBirthdayYear = initialBirthdayDate.getFullYear(); // DatePicker component props\n\n  var [selectedDate, setSelectedDate] = useState(initialBirthdayDate);\n  var [{\n    month,\n    year\n  }, setDatePickerMonthYear] = useState({\n    month: initialBirthdayMonth,\n    year: initialBirthdayYear\n  });\n\n  var handleFieldChange = (field, value) => {\n    setFormData(prevFormData => _objectSpread(_objectSpread({}, prevFormData), {}, {\n      [field]: value\n    }));\n  };\n\n  var handleSave = () => {\n    // Log the updated user data to the console, though I assume we would send this in a POST request back normally\n    console.log('Updated User Data:', formData);\n  };\n\n  var handleCancel = () => {\n    // Revert form field values back to initial data\n    setFormData(userData);\n    setDatePickerMonthYear({\n      month: initialBirthdayMonth,\n      year: initialBirthdayYear\n    });\n    setSelectedDate(initialBirthdayDate);\n  };\n\n  var handleMonthChange = useCallback((month, year) => setDatePickerMonthYear(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n    month,\n    year\n  })), []);\n  var handleDateChange = useCallback(selectedDate => setSelectedDate(selectedDate), []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Edit User Details\",\n    sectioned: true,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(FormLayout, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"First Name\",\n          value: formData === null || formData === void 0 ? void 0 : formData.first_name,\n          onChange: value => handleFieldChange('first_name', value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Last Name\",\n          value: formData === null || formData === void 0 ? void 0 : formData.last_name,\n          onChange: value => handleFieldChange('last_name', value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Address\",\n          value: formData === null || formData === void 0 ? void 0 : formData.address,\n          onChange: value => handleFieldChange('address', value),\n          multiline: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"birthday\",\n          children: \"Birthday\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          month: month,\n          year: year,\n          selected: selectedDate,\n          onChange: value => {\n            handleFieldChange('birthday', format(value === null || value === void 0 ? void 0 : value.start, 'yyyy-MM-dd'));\n            handleDateChange(value);\n          },\n          onMonthChange: handleMonthChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          label: \"Gender\",\n          options: [{\n            label: 'Male',\n            value: 'male'\n          }, {\n            label: 'Female',\n            value: 'female'\n          }, {\n            label: 'Other',\n            value: 'other'\n          }, {\n            label: 'Unknown',\n            value: 'unknown'\n          }],\n          value: formData === null || formData === void 0 ? void 0 : formData.gender,\n          onChange: value => handleFieldChange('gender', value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          spacing: \"tight\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            primary: true,\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            destructive: true,\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateUserForm, \"tKXI7IusHvkNWyTeSdBxPgyWx+o=\");\n\n_c = UpdateUserForm;\nexport default UpdateUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUserForm\");","map":{"version":3,"sources":["/Users/danialridhwan/Downloads/polaris-form-exercise-danial/src/components/UpdateUserForm.js"],"names":["React","useState","useCallback","Form","FormLayout","TextField","DatePicker","Select","Button","ButtonGroup","Card","Label","format","UpdateUserForm","userData","formData","setFormData","initialBirthdayDate","birthday","Date","initialBirthdayMonth","getMonth","initialBirthdayYear","getFullYear","selectedDate","setSelectedDate","month","year","setDatePickerMonthYear","handleFieldChange","field","value","prevFormData","handleSave","console","log","handleCancel","handleMonthChange","prevState","handleDateChange","first_name","last_name","address","start","label","gender"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Form, FormLayout, TextField, DatePicker, Select, Button, ButtonGroup, Card, Label } from '@shopify/polaris';\nimport { format } from 'date-fns';\n\nconst UpdateUserForm = ({ userData }) => {\n  const [formData, setFormData] = useState(userData);\n\n  // Date props for birthday\n  // default to today if userData doesn't have birthday and DatePicker doesn't break\n  const initialBirthdayDate = userData?.birthday ? new Date(userData?.birthday) : new Date();\n  let initialBirthdayMonth = initialBirthdayDate.getMonth(),\n      initialBirthdayYear = initialBirthdayDate.getFullYear();\n\n  // DatePicker component props\n  const [selectedDate, setSelectedDate] = useState(initialBirthdayDate);\n  const [{ month, year }, setDatePickerMonthYear] = useState({ month: initialBirthdayMonth, year: initialBirthdayYear });\n\n  const handleFieldChange = (field, value) => {\n    setFormData(prevFormData => ({ ...prevFormData, [field]: value }));\n  };\n\n  const handleSave = () => {\n    // Log the updated user data to the console, though I assume we would send this in a POST request back normally\n    console.log('Updated User Data:', formData);\n  };\n\n  const handleCancel = () => {\n    // Revert form field values back to initial data\n    setFormData(userData);\n    setDatePickerMonthYear({ month: initialBirthdayMonth, year: initialBirthdayYear });\n    setSelectedDate(initialBirthdayDate)\n  };\n\n  const handleMonthChange = useCallback(\n    (month, year) => setDatePickerMonthYear(prevState => ({ ...prevState, month, year })),\n    []\n  );\n\n  const handleDateChange = useCallback(\n    (selectedDate) => setSelectedDate(selectedDate),\n    [],\n  );\n\n  return (\n    <Card title=\"Edit User Details\" sectioned>\n      <Form>\n        <FormLayout>\n          <TextField\n            label=\"First Name\"\n            value={formData?.first_name}\n            onChange={(value) => handleFieldChange('first_name', value)}\n          />\n          <TextField\n            label=\"Last Name\"\n            value={formData?.last_name}\n            onChange={(value) => handleFieldChange('last_name', value)}\n          />\n          <TextField\n            label=\"Address\"\n            value={formData?.address}\n            onChange={(value) => handleFieldChange('address', value)}\n            multiline={4}\n          />\n          <Label htmlFor=\"birthday\">Birthday</Label>\n          <DatePicker\n            month={month}\n            year={year}\n            selected={selectedDate}\n            onChange={(value) => {\n              handleFieldChange('birthday', format(value?.start, 'yyyy-MM-dd'));\n              handleDateChange(value);\n            }}\n            onMonthChange={handleMonthChange}\n          />\n          <Select\n            label=\"Gender\"\n            options={[\n              { label: 'Male', value: 'male' },\n              { label: 'Female', value: 'female' },\n              { label: 'Other', value: 'other' },\n              { label: 'Unknown', value: 'unknown' }\n            ]}\n            value={formData?.gender}\n            onChange={(value) => handleFieldChange('gender', value)}\n          />\n          <ButtonGroup spacing='tight'>\n            <Button primary onClick={handleSave}>Save</Button>\n            <Button destructive onClick={handleCancel}>Cancel</Button>\n          </ButtonGroup>\n        </FormLayout>\n      </Form>\n    </Card>\n  );\n};\n\nexport default UpdateUserForm;"]},"metadata":{},"sourceType":"module"}